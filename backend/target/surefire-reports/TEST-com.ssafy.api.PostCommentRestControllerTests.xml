<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.ssafy.api.PostCommentRestControllerTests" time="0.084" tests="3" errors="2" skipped="0" failures="1">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="MS949"/>
    <property name="java.class.path" value="C:\Users\multicampus\Documents\Workspace_ssafy2\webmobile-final\backend\target\test-classes;C:\Users\multicampus\Documents\Workspace_ssafy2\webmobile-final\backend\target\classes;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.6.RELEASE\spring-boot-starter-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot\2.1.6.RELEASE\spring-boot-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.6.RELEASE\spring-boot-autoconfigure-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-core\5.1.8.RELEASE\spring-core-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-jcl\5.1.8.RELEASE\spring-jcl-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.6.RELEASE\spring-boot-starter-aop-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-aop\5.1.8.RELEASE\spring-aop-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\aspectj\aspectjweaver\1.9.4\aspectjweaver-1.9.4.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.6.RELEASE\spring-boot-starter-test-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-test\2.1.6.RELEASE\spring-boot-test-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.6.RELEASE\spring-boot-test-autoconfigure-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\multicampus\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\multicampus\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\multicampus\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\multicampus\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\multicampus\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\multicampus\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\multicampus\.m2\repository\net\bytebuddy\byte-buddy\1.9.13\byte-buddy-1.9.13.jar;C:\Users\multicampus\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.13\byte-buddy-agent-1.9.13.jar;C:\Users\multicampus\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\multicampus\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\multicampus\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\multicampus\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\multicampus\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-test\5.1.8.RELEASE\spring-test-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-log4j2\2.1.6.RELEASE\spring-boot-starter-log4j2-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.11.2\log4j-slf4j-impl-2.11.2.jar;C:\Users\multicampus\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;C:\Users\multicampus\.m2\repository\org\apache\logging\log4j\log4j-core\2.11.2\log4j-core-2.11.2.jar;C:\Users\multicampus\.m2\repository\org\apache\logging\log4j\log4j-jul\2.11.2\log4j-jul-2.11.2.jar;C:\Users\multicampus\.m2\repository\org\slf4j\jul-to-slf4j\1.7.26\jul-to-slf4j-1.7.26.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.6.RELEASE\spring-boot-starter-web-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.6.RELEASE\spring-boot-starter-json-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.9\jackson-datatype-jdk8-2.9.9.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.9\jackson-datatype-jsr310-2.9.9.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.9\jackson-module-parameter-names-2.9.9.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.6.RELEASE\spring-boot-starter-tomcat-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.21\tomcat-embed-core-9.0.21.jar;C:\Users\multicampus\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.21\tomcat-embed-el-9.0.21.jar;C:\Users\multicampus\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.21\tomcat-embed-websocket-9.0.21.jar;C:\Users\multicampus\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\multicampus\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\multicampus\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-web\5.1.8.RELEASE\spring-web-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-webmvc\5.1.8.RELEASE\spring-webmvc-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-expression\5.1.8.RELEASE\spring-expression-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.0.1\mybatis-spring-boot-starter-2.0.1.jar;C:\Users\multicampus\.m2\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.0.1\mybatis-spring-boot-autoconfigure-2.0.1.jar;C:\Users\multicampus\.m2\repository\org\mybatis\mybatis\3.5.1\mybatis-3.5.1.jar;C:\Users\multicampus\.m2\repository\org\mybatis\mybatis-spring\2.0.1\mybatis-spring-2.0.1.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.1.6.RELEASE\spring-boot-starter-thymeleaf-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.6.RELEASE\spring-boot-devtools-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.1.6.RELEASE\spring-boot-starter-jdbc-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-jdbc\5.1.8.RELEASE\spring-jdbc-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-tx\5.1.8.RELEASE\spring-tx-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.1.6.RELEASE\spring-boot-starter-data-jpa-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\multicampus\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\multicampus\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\multicampus\.m2\repository\org\hibernate\hibernate-core\5.3.10.Final\hibernate-core-5.3.10.Final.jar;C:\Users\multicampus\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\multicampus\.m2\repository\org\javassist\javassist\3.23.2-GA\javassist-3.23.2-GA.jar;C:\Users\multicampus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\multicampus\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\multicampus\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\multicampus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\multicampus\.m2\repository\org\springframework\data\spring-data-jpa\2.1.9.RELEASE\spring-data-jpa-2.1.9.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\data\spring-data-commons\2.1.9.RELEASE\spring-data-commons-2.1.9.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-orm\5.1.8.RELEASE\spring-orm-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-aspects\5.1.8.RELEASE\spring-aspects-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\multicampus\.m2\repository\org\springframework\hateoas\spring-hateoas\0.25.1.RELEASE\spring-hateoas-0.25.1.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-beans\5.1.8.RELEASE\spring-beans-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-context\5.1.8.RELEASE\spring-context-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\slf4j\slf4j-api\1.7.26\slf4j-api-1.7.26.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\multicampus\.m2\repository\org\springframework\restdocs\spring-restdocs-mockmvc\2.0.3.RELEASE\spring-restdocs-mockmvc-2.0.3.RELEASE.jar;C:\Users\multicampus\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\multicampus\.m2\repository\org\springframework\restdocs\spring-restdocs-core\2.0.3.RELEASE\spring-restdocs-core-2.0.3.RELEASE.jar;C:\Users\multicampus\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;"/>
    <property name="java.vm.vendor" value=""/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Seoul"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="user.country" value="KR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\MULTIC~1\AppData\Local\Temp\surefire4736351849405350684\surefirebooter5962236202075803771.jar C:\Users\multicampus\AppData\Local\Temp\surefire4736351849405350684 2019-08-08T09-32-03_845-jvmRun1 surefire1865645387629886721tmp surefire_05792564115625047287tmp"/>
    <property name="surefire.test.class.path" value="C:\Users\multicampus\Documents\Workspace_ssafy2\webmobile-final\backend\target\test-classes;C:\Users\multicampus\Documents\Workspace_ssafy2\webmobile-final\backend\target\classes;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.6.RELEASE\spring-boot-starter-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot\2.1.6.RELEASE\spring-boot-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.6.RELEASE\spring-boot-autoconfigure-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-core\5.1.8.RELEASE\spring-core-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-jcl\5.1.8.RELEASE\spring-jcl-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.6.RELEASE\spring-boot-starter-aop-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-aop\5.1.8.RELEASE\spring-aop-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\aspectj\aspectjweaver\1.9.4\aspectjweaver-1.9.4.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.6.RELEASE\spring-boot-starter-test-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-test\2.1.6.RELEASE\spring-boot-test-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.6.RELEASE\spring-boot-test-autoconfigure-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\multicampus\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\multicampus\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\multicampus\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\multicampus\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\multicampus\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\multicampus\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\multicampus\.m2\repository\net\bytebuddy\byte-buddy\1.9.13\byte-buddy-1.9.13.jar;C:\Users\multicampus\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.13\byte-buddy-agent-1.9.13.jar;C:\Users\multicampus\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\multicampus\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\multicampus\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\multicampus\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\multicampus\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-test\5.1.8.RELEASE\spring-test-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-log4j2\2.1.6.RELEASE\spring-boot-starter-log4j2-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.11.2\log4j-slf4j-impl-2.11.2.jar;C:\Users\multicampus\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;C:\Users\multicampus\.m2\repository\org\apache\logging\log4j\log4j-core\2.11.2\log4j-core-2.11.2.jar;C:\Users\multicampus\.m2\repository\org\apache\logging\log4j\log4j-jul\2.11.2\log4j-jul-2.11.2.jar;C:\Users\multicampus\.m2\repository\org\slf4j\jul-to-slf4j\1.7.26\jul-to-slf4j-1.7.26.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.6.RELEASE\spring-boot-starter-web-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.6.RELEASE\spring-boot-starter-json-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.9\jackson-datatype-jdk8-2.9.9.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.9\jackson-datatype-jsr310-2.9.9.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.9\jackson-module-parameter-names-2.9.9.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.6.RELEASE\spring-boot-starter-tomcat-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.21\tomcat-embed-core-9.0.21.jar;C:\Users\multicampus\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.21\tomcat-embed-el-9.0.21.jar;C:\Users\multicampus\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.21\tomcat-embed-websocket-9.0.21.jar;C:\Users\multicampus\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\multicampus\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\multicampus\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-web\5.1.8.RELEASE\spring-web-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-webmvc\5.1.8.RELEASE\spring-webmvc-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-expression\5.1.8.RELEASE\spring-expression-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.0.1\mybatis-spring-boot-starter-2.0.1.jar;C:\Users\multicampus\.m2\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.0.1\mybatis-spring-boot-autoconfigure-2.0.1.jar;C:\Users\multicampus\.m2\repository\org\mybatis\mybatis\3.5.1\mybatis-3.5.1.jar;C:\Users\multicampus\.m2\repository\org\mybatis\mybatis-spring\2.0.1\mybatis-spring-2.0.1.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.1.6.RELEASE\spring-boot-starter-thymeleaf-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.6.RELEASE\spring-boot-devtools-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.1.6.RELEASE\spring-boot-starter-jdbc-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-jdbc\5.1.8.RELEASE\spring-jdbc-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-tx\5.1.8.RELEASE\spring-tx-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.1.6.RELEASE\spring-boot-starter-data-jpa-2.1.6.RELEASE.jar;C:\Users\multicampus\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\multicampus\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\multicampus\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\multicampus\.m2\repository\org\hibernate\hibernate-core\5.3.10.Final\hibernate-core-5.3.10.Final.jar;C:\Users\multicampus\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\multicampus\.m2\repository\org\javassist\javassist\3.23.2-GA\javassist-3.23.2-GA.jar;C:\Users\multicampus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\multicampus\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\multicampus\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\multicampus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\multicampus\.m2\repository\org\springframework\data\spring-data-jpa\2.1.9.RELEASE\spring-data-jpa-2.1.9.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\data\spring-data-commons\2.1.9.RELEASE\spring-data-commons-2.1.9.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-orm\5.1.8.RELEASE\spring-orm-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-aspects\5.1.8.RELEASE\spring-aspects-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\multicampus\.m2\repository\org\springframework\hateoas\spring-hateoas\0.25.1.RELEASE\spring-hateoas-0.25.1.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-beans\5.1.8.RELEASE\spring-beans-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\springframework\spring-context\5.1.8.RELEASE\spring-context-5.1.8.RELEASE.jar;C:\Users\multicampus\.m2\repository\org\slf4j\slf4j-api\1.7.26\slf4j-api-1.7.26.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\multicampus\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\multicampus\.m2\repository\org\springframework\restdocs\spring-restdocs-mockmvc\2.0.3.RELEASE\spring-restdocs-mockmvc-2.0.3.RELEASE.jar;C:\Users\multicampus\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\multicampus\.m2\repository\org\springframework\restdocs\spring-restdocs-core\2.0.3.RELEASE\spring-restdocs-core-2.0.3.RELEASE.jar;C:\Users\multicampus\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\multicampus"/>
    <property name="user.language" value="ko"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre"/>
    <property name="basedir" value="C:\Users\multicampus\Documents\Workspace_ssafy2\webmobile-final\backend"/>
    <property name="style.color" value="always"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\MULTIC~1\AppData\Local\Temp\surefire4736351849405350684\surefirebooter5962236202075803771.jar"/>
    <property name="sun.boot.class.path" value="C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\resources.jar;C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\rt.jar;C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\sunrsasign.jar;C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\jsse.jar;C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\jce.jar;C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\charsets.jar;C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\jfr.jar;C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_212-1-ojdkbuild-b04"/>
    <property name="user.name" value="multicampus"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="MS949"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\multicampus\.m2\repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\MULTIC~1\AppData\Local\Temp\"/>
    <property name="java.version" value="1.8.0_212-1-ojdkbuild"/>
    <property name="user.dir" value="C:\Users\multicampus\Documents\Workspace_ssafy2\webmobile-final\backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/ojdkbuild/java-1.8.0-openjdk-1.8.0.212-1/jre/bin/server;C:/Program Files/ojdkbuild/java-1.8.0-openjdk-1.8.0.212-1/jre/bin;C:/Program Files/ojdkbuild/java-1.8.0-openjdk-1.8.0.212-1/jre/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Java\jdk-12.0.1\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\multicampus\AppData\Local\Microsoft\WindowsApps;C:\Users\multicampus\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Bandizip\;C:\Users\multicampus\AppData\Roaming\npm;C:\Users\multicampus\AppData\Local\Microsoft\WindowsApps;C:\Program Files\sts-bundle\sts-3.9.9.RELEASE;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.212-b04"/>
    <property name="java.ext.dirs" value="C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.212-1\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="createPostComment" classname="com.ssafy.api.PostCommentRestControllerTests" time="0.04">
    <error message="Fields with the following paths were not found in the payload: [postId]" type="org.springframework.restdocs.snippet.SnippetException">org.springframework.restdocs.snippet.SnippetException: Fields with the following paths were not found in the payload: [postId]
	at com.ssafy.api.PostCommentRestControllerTests.createPostComment(PostCommentRestControllerTests.java:48)
</error>
    <system-out><![CDATA[2019-08-08 09:32:10 INFO Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.ssafy.api.PostCommentRestControllerTests], using SpringBootContextLoader
2019-08-08 09:32:10 INFO Could not detect default resource locations for test class [com.ssafy.api.PostCommentRestControllerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-08-08 09:32:10 INFO Could not detect default configuration classes for test class [com.ssafy.api.PostCommentRestControllerTests]: PostCommentRestControllerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-08-08 09:32:10 INFO Found @SpringBootConfiguration com.ssafy.WebmobileSub2Application for test class com.ssafy.api.PostCommentRestControllerTests
2019-08-08 09:32:10 INFO Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-08-08 09:32:10 INFO Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7c359808, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1f013047, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@16361e61, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@51566ce0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1734b1a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@17e6d07b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@318511f0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53564a4c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4866e0a7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@69a294d8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70b1028d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@11d422fd]
2019-08-08 09:32:10 INFO [#] [START] - [ACCOUNT : test@email.com | AUTH : 2] / [LOCATION : com.ssafy.api.PostCommentRestController | [METHOD (POST) : createPostComment()]
2019-08-08 09:32:10 INFO [#] [ END ] - [ACCOUNT : test@email.com | AUTH : 2] / [LOCATION : com.ssafy.api.PostCommentRestController | [METHOD (POST) : createPostComment()]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /posts/1/comments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"postCommentId":0,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"댓글 내용"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PostCommentResource> com.ssafy.api.PostCommentRestController.createPostComment(java.lang.String,int,long,com.ssafy.vo.PostComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/posts/1", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"postCommentId":1,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"댓글 내용","postCommentCreatedAt":"2019-08-08T09:32:10.485","links":[{"rel":"self","href":"http://localhost:8080/posts/1"},{"rel":"update","href":"http://localhost:8080/posts/1"},{"rel":"delete","href":"http://localhost:8080/posts/1"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/posts/1
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /portfolios/1/comments/1
       Parameters = {}
          Headers = [accountEmail:"test@email.com", accountAuth:"2"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<?> com.ssafy.api.PortfolioCommentRestController.deletePortfolioCommentByPortfolioCommentId(java.lang.String,int,long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = java.lang.NullPointerException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /portfolios/2/comments/2
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioCommentResource> com.ssafy.api.PortfolioCommentRestController.updatePortfolioComment(java.lang.String,int,long,com.ssafy.vo.PortfolioComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827","links":[{"rel":"self","href":"http://localhost:8080/portfolios/2"},{"rel":"delete","href":"http://localhost:8080/portfolios/2"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /portfolios/3/comments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioCommentId":0,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioCommentResource> com.ssafy.api.PortfolioCommentRestController.createPortfolioComment(java.lang.String,int,long,com.ssafy.vo.PortfolioComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/portfolios/3", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioCommentId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용","portfolioCommentCreatedAt":"2019-08-08T09:32:10.033","links":[{"rel":"self","href":"http://localhost:8080/portfolios/3"},{"rel":"update","href":"http://localhost:8080/portfolios/3"},{"rel":"delete","href":"http://localhost:8080/portfolios/3"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/portfolios/3
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /portfolios/4
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.068","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.updatePortfolio(java.lang.String,int,long,com.ssafy.vo.Portfolio) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.145","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/4"},{"rel":"delete","href":"http://localhost:8080/portfolios/4"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/pages/1
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<org.springframework.hateoas.PagedResources<com.ssafy.vo.resource.PortfolioResource>> com.ssafy.api.PortfolioRestController.findAllPortfolios(int,org.springframework.data.web.PagedResourcesAssembler<com.ssafy.vo.Portfolio>)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"links":[{"rel":"self","href":"http://localhost:8080/portfolios/pages/1?page=0&size=6&sort=portfolioCreatedAt,desc"}],"content":[{"portfolioId":5,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.181","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/5"}]},{"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.145","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/4"}]},{"portfolioId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.026","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[{"portfolioCommentId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용","portfolioCommentCreatedAt":"2019-08-08T09:32:10.033"}],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/3"}]},{"portfolioId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:09.826","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[{"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827"}],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/2"}]},{"portfolioId":1,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:09.706","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/1"}]}],"page":{"size":6,"totalElements":5,"totalPages":1,"number":0}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/6
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.findPortfolioByPortfolioId(long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":6,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.346","portfolioGiturl":"www.github.com/repository","portfolioViews":1,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/6"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /portfolios
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioId":0,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.createPortfolio(java.lang.String,int,com.ssafy.vo.Portfolio) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/portfolios/7", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":7,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.374","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/7"},{"rel":"update","href":"http://localhost:8080/portfolios/7"},{"rel":"delete","href":"http://localhost:8080/portfolios/7"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/portfolios/7
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/count
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<java.util.HashMap<java.lang.String, java.lang.Long>> com.ssafy.api.PortfolioRestController.countPortfolios()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"countPortfolios":8}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /portfolios/9
       Parameters = {}
          Headers = [accountEmail:"test@email.com", accountAuth:"1"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<?> com.ssafy.api.PortfolioRestController.deletePortfolioByPortfolioId(java.lang.String,int,long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /posts/1/comments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"postCommentId":0,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"댓글 내용"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PostCommentResource> com.ssafy.api.PostCommentRestController.createPostComment(java.lang.String,int,long,com.ssafy.vo.PostComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/posts/1", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"postCommentId":1,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"댓글 내용","postCommentCreatedAt":"2019-08-08T09:32:10.485","links":[{"rel":"self","href":"http://localhost:8080/posts/1"},{"rel":"update","href":"http://localhost:8080/posts/1"},{"rel":"delete","href":"http://localhost:8080/posts/1"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/posts/1
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="updatePostComment" classname="com.ssafy.api.PostCommentRestControllerTests" time="0.03">
    <error message="Fields with the following paths were not found in the payload: [postId]" type="org.springframework.restdocs.snippet.SnippetException">org.springframework.restdocs.snippet.SnippetException: Fields with the following paths were not found in the payload: [postId]
	at com.ssafy.api.PostCommentRestControllerTests.updatePostComment(PostCommentRestControllerTests.java:94)
</error>
    <system-out><![CDATA[2019-08-08 09:32:10 INFO [#] [START] - [ACCOUNT : test@email.com | AUTH : 2] / [LOCATION : com.ssafy.api.PostCommentRestController | [METHOD (PUT) : updatePostComment()]
2019-08-08 09:32:10 INFO [#] [ END ] - [ACCOUNT : test@email.com | AUTH : 2] / [LOCATION : com.ssafy.api.PostCommentRestController | [METHOD (PUT) : updatePostComment()]

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /posts/2/comments/2
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"postCommentId":2,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"내용 수정","postCommentCreatedAt":"2019-08-08T09:32:10.508"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PostCommentResource> com.ssafy.api.PostCommentRestController.updatePostComment(java.lang.String,int,long,com.ssafy.vo.PostComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"postCommentId":2,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"내용 수정","postCommentCreatedAt":"2019-08-08T09:32:10.508","links":[{"rel":"self","href":"http://localhost:8080/posts/2"},{"rel":"delete","href":"http://localhost:8080/posts/2"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /portfolios/1/comments/1
       Parameters = {}
          Headers = [accountEmail:"test@email.com", accountAuth:"2"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<?> com.ssafy.api.PortfolioCommentRestController.deletePortfolioCommentByPortfolioCommentId(java.lang.String,int,long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = java.lang.NullPointerException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /portfolios/2/comments/2
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioCommentResource> com.ssafy.api.PortfolioCommentRestController.updatePortfolioComment(java.lang.String,int,long,com.ssafy.vo.PortfolioComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827","links":[{"rel":"self","href":"http://localhost:8080/portfolios/2"},{"rel":"delete","href":"http://localhost:8080/portfolios/2"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /portfolios/3/comments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioCommentId":0,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioCommentResource> com.ssafy.api.PortfolioCommentRestController.createPortfolioComment(java.lang.String,int,long,com.ssafy.vo.PortfolioComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/portfolios/3", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioCommentId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용","portfolioCommentCreatedAt":"2019-08-08T09:32:10.033","links":[{"rel":"self","href":"http://localhost:8080/portfolios/3"},{"rel":"update","href":"http://localhost:8080/portfolios/3"},{"rel":"delete","href":"http://localhost:8080/portfolios/3"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/portfolios/3
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /portfolios/4
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.068","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.updatePortfolio(java.lang.String,int,long,com.ssafy.vo.Portfolio) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.145","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/4"},{"rel":"delete","href":"http://localhost:8080/portfolios/4"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/pages/1
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<org.springframework.hateoas.PagedResources<com.ssafy.vo.resource.PortfolioResource>> com.ssafy.api.PortfolioRestController.findAllPortfolios(int,org.springframework.data.web.PagedResourcesAssembler<com.ssafy.vo.Portfolio>)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"links":[{"rel":"self","href":"http://localhost:8080/portfolios/pages/1?page=0&size=6&sort=portfolioCreatedAt,desc"}],"content":[{"portfolioId":5,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.181","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/5"}]},{"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.145","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/4"}]},{"portfolioId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.026","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[{"portfolioCommentId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용","portfolioCommentCreatedAt":"2019-08-08T09:32:10.033"}],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/3"}]},{"portfolioId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:09.826","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[{"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827"}],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/2"}]},{"portfolioId":1,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:09.706","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/1"}]}],"page":{"size":6,"totalElements":5,"totalPages":1,"number":0}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/6
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.findPortfolioByPortfolioId(long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":6,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.346","portfolioGiturl":"www.github.com/repository","portfolioViews":1,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/6"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /portfolios
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioId":0,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.createPortfolio(java.lang.String,int,com.ssafy.vo.Portfolio) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/portfolios/7", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":7,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.374","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/7"},{"rel":"update","href":"http://localhost:8080/portfolios/7"},{"rel":"delete","href":"http://localhost:8080/portfolios/7"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/portfolios/7
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/count
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<java.util.HashMap<java.lang.String, java.lang.Long>> com.ssafy.api.PortfolioRestController.countPortfolios()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"countPortfolios":8}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /portfolios/9
       Parameters = {}
          Headers = [accountEmail:"test@email.com", accountAuth:"1"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<?> com.ssafy.api.PortfolioRestController.deletePortfolioByPortfolioId(java.lang.String,int,long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /posts/1/comments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"postCommentId":0,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"댓글 내용"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PostCommentResource> com.ssafy.api.PostCommentRestController.createPostComment(java.lang.String,int,long,com.ssafy.vo.PostComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/posts/1", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"postCommentId":1,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"댓글 내용","postCommentCreatedAt":"2019-08-08T09:32:10.485","links":[{"rel":"self","href":"http://localhost:8080/posts/1"},{"rel":"update","href":"http://localhost:8080/posts/1"},{"rel":"delete","href":"http://localhost:8080/posts/1"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/posts/1
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /posts/2/comments/2
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"postCommentId":2,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"내용 수정","postCommentCreatedAt":"2019-08-08T09:32:10.508"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PostCommentResource> com.ssafy.api.PostCommentRestController.updatePostComment(java.lang.String,int,long,com.ssafy.vo.PostComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"postCommentId":2,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"내용 수정","postCommentCreatedAt":"2019-08-08T09:32:10.508","links":[{"rel":"self","href":"http://localhost:8080/posts/2"},{"rel":"delete","href":"http://localhost:8080/posts/2"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="deletePostComment" classname="com.ssafy.api.PostCommentRestControllerTests" time="0.013">
    <failure message="Status expected:&lt;204&gt; but was:&lt;400&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<204> but was:<400>
	at com.ssafy.api.PostCommentRestControllerTests.deletePostComment(PostCommentRestControllerTests.java:137)
]]></failure>
    <system-out><![CDATA[2019-08-08 09:32:10 INFO [#] [START] - [ACCOUNT : test@email.com | AUTH : 2] / [LOCATION : com.ssafy.api.PostCommentRestController | [METHOD (DELETE) : deletePostCommentByPostCommentId()]

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /posts/3/comments/3
       Parameters = {}
          Headers = [accountEmail:"test@email.com", accountAuth:"2"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<?> com.ssafy.api.PostCommentRestController.deletePostCommentByPostCommentId(java.lang.String,int,long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = java.lang.NullPointerException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /portfolios/1/comments/1
       Parameters = {}
          Headers = [accountEmail:"test@email.com", accountAuth:"2"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<?> com.ssafy.api.PortfolioCommentRestController.deletePortfolioCommentByPortfolioCommentId(java.lang.String,int,long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = java.lang.NullPointerException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /portfolios/2/comments/2
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioCommentResource> com.ssafy.api.PortfolioCommentRestController.updatePortfolioComment(java.lang.String,int,long,com.ssafy.vo.PortfolioComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827","links":[{"rel":"self","href":"http://localhost:8080/portfolios/2"},{"rel":"delete","href":"http://localhost:8080/portfolios/2"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /portfolios/3/comments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioCommentId":0,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioCommentResource> com.ssafy.api.PortfolioCommentRestController.createPortfolioComment(java.lang.String,int,long,com.ssafy.vo.PortfolioComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/portfolios/3", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioCommentId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용","portfolioCommentCreatedAt":"2019-08-08T09:32:10.033","links":[{"rel":"self","href":"http://localhost:8080/portfolios/3"},{"rel":"update","href":"http://localhost:8080/portfolios/3"},{"rel":"delete","href":"http://localhost:8080/portfolios/3"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/portfolios/3
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /portfolios/4
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.068","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.updatePortfolio(java.lang.String,int,long,com.ssafy.vo.Portfolio) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.145","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/4"},{"rel":"delete","href":"http://localhost:8080/portfolios/4"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/pages/1
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<org.springframework.hateoas.PagedResources<com.ssafy.vo.resource.PortfolioResource>> com.ssafy.api.PortfolioRestController.findAllPortfolios(int,org.springframework.data.web.PagedResourcesAssembler<com.ssafy.vo.Portfolio>)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"links":[{"rel":"self","href":"http://localhost:8080/portfolios/pages/1?page=0&size=6&sort=portfolioCreatedAt,desc"}],"content":[{"portfolioId":5,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.181","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/5"}]},{"portfolioId":4,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"update title","portfolioContent":"update content","portfolioCreatedAt":"2019-08-08T09:32:10.145","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/4"}]},{"portfolioId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.026","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[{"portfolioCommentId":3,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"댓글 내용","portfolioCommentCreatedAt":"2019-08-08T09:32:10.033"}],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/3"}]},{"portfolioId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:09.826","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[{"portfolioCommentId":2,"accountEmail":"test@email.com","accountName":"test name","portfolioCommentContent":"내용 수정","portfolioCommentCreatedAt":"2019-08-08T09:32:09.827"}],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/2"}]},{"portfolioId":1,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:09.706","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/1"}]}],"page":{"size":6,"totalElements":5,"totalPages":1,"number":0}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/6
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.findPortfolioByPortfolioId(long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":6,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.346","portfolioGiturl":"www.github.com/repository","portfolioViews":1,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/6"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /portfolios
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"portfolioId":0,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PortfolioResource> com.ssafy.api.PortfolioRestController.createPortfolio(java.lang.String,int,com.ssafy.vo.Portfolio) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/portfolios/7", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"portfolioId":7,"accountEmail":"test@email.com","accountName":"test name","portfolioTitle":"포트폴리오 제목","portfolioContent":"포트폴리오 내용","portfolioCreatedAt":"2019-08-08T09:32:10.374","portfolioGiturl":"www.github.com/repository","portfolioViews":0,"portfolioThumbnailUrl":"/image.png","portfolioComments":[],"links":[{"rel":"self","href":"http://localhost:8080/portfolios/7"},{"rel":"update","href":"http://localhost:8080/portfolios/7"},{"rel":"delete","href":"http://localhost:8080/portfolios/7"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/portfolios/7
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /portfolios/count
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<java.util.HashMap<java.lang.String, java.lang.Long>> com.ssafy.api.PortfolioRestController.countPortfolios()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"countPortfolios":8}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /portfolios/9
       Parameters = {}
          Headers = [accountEmail:"test@email.com", accountAuth:"1"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PortfolioRestController
           Method = public org.springframework.http.ResponseEntity<?> com.ssafy.api.PortfolioRestController.deletePortfolioByPortfolioId(java.lang.String,int,long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /posts/1/comments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"postCommentId":0,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"댓글 내용"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PostCommentResource> com.ssafy.api.PostCommentRestController.createPostComment(java.lang.String,int,long,com.ssafy.vo.PostComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Location:"http://localhost:8080/posts/1", Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"postCommentId":1,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"댓글 내용","postCommentCreatedAt":"2019-08-08T09:32:10.485","links":[{"rel":"self","href":"http://localhost:8080/posts/1"},{"rel":"update","href":"http://localhost:8080/posts/1"},{"rel":"delete","href":"http://localhost:8080/posts/1"}]}
    Forwarded URL = null
   Redirected URL = http://localhost:8080/posts/1
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /posts/2/comments/2
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", accountEmail:"test@email.com", accountAuth:"2"]
             Body = {"postCommentId":2,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"내용 수정","postCommentCreatedAt":"2019-08-08T09:32:10.508"}
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<com.ssafy.vo.resource.PostCommentResource> com.ssafy.api.PostCommentRestController.updatePostComment(java.lang.String,int,long,com.ssafy.vo.PostComment) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/hal+json;charset=UTF-8"]
     Content type = application/hal+json;charset=UTF-8
             Body = {"postCommentId":2,"accountEmail":"test@email.com","accountName":"test name","postCommentContent":"내용 수정","postCommentCreatedAt":"2019-08-08T09:32:10.508","links":[{"rel":"self","href":"http://localhost:8080/posts/2"},{"rel":"delete","href":"http://localhost:8080/posts/2"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /posts/3/comments/3
       Parameters = {}
          Headers = [accountEmail:"test@email.com", accountAuth:"2"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.ssafy.api.PostCommentRestController
           Method = public org.springframework.http.ResponseEntity<?> com.ssafy.api.PostCommentRestController.deletePostCommentByPostCommentId(java.lang.String,int,long) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = java.lang.NullPointerException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
</testsuite>